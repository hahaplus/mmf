name: cpu_tests

on:
  # Trigger the workflow on push to master or any pull request
  push:
    branches:
      - master
  pull_request:

jobs:
  cpu_tests:

    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8]

    runs-on: ${{ matrix.platform }}

    steps:
    # - uses: actions/checkout@v1
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: ${{ matrix.python-version }}
    - name: Checkout master üõéÔ∏è
      uses: actions/checkout@v2
      # If you're using actions/checkout@v2 you must set persist-credentials to false in most
      # cases for the deployment to work correctly.
      with:
        persist-credentials: false
        ref: master
        path: mmf_master

    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1
      with:
        activate-environment: mmf
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
        use-only-tar-bz2: true

    # - name: Conditionally install pytorch
    #   if: matrix.platform == 'windows-latest'
    #   run: pip3 install torch -f https://download.pytorch.org/whl/torch_stable.html

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if nothing has not changed but you still
        # want to invalidate the cache
        CACHE_NUMBER: 0
      with:
        path: |
          /usr/share/miniconda/envs/
        key: cpu-mmf-${{ matrix.platform }}-python${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/setup.py') }}

    - name: Install Dependencies
      run: |
        conda activate mmf
        cd ${GITHUB_WORKSPACE}/mmf_master
        python -m pip install --upgrade pip
        pip install --upgrade setuptools
        pip install --progress-bar off pytest
        pip install -r requirements.txt
        python -c 'import torch; print("Torch version:", torch.__version__)'
        python -m torch.utils.collect_env

    - name: Install MMF
      run: |
        conda activate mmf
        cd ${GITHUB_WORKSPACE}/mmf_master
        python setup.py clean --all
        python setup.py install

    - name: Run Unit Tests
      run: |
        conda activate mmf
        cd ${GITHUB_WORKSPACE}/mmf_master/tests
        pytest --junitxml=test-results/junit.xml -v .
